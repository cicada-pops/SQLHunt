import Link from "next/link"
import Image from "next/image"
import { X, Play, ChevronUp, ChevronDown } from "lucide-react"
import { memo, useState, useRef, useEffect } from "react"
import { useAuth } from "../contexts/auth-context"

interface CaseCardProps {
  number: string
  title: string
  description: string
  isMarked: boolean
  className?: string
  requiredExp: number
  userExp: number
  onExpandCase?: (isExpanded: boolean, caseData: { number: string; title: string; description: string }) => void
}

// –ò—Å–ø–æ–ª—å–∑—É–µ–º memo –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –Ω–µ–Ω—É–∂–Ω—ã—Ö –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–æ–≤
export const CaseCard = memo(function CaseCard({ 
  number, 
  title, 
  description, 
  isMarked,
  requiredExp,
  userExp, 
  className = "",
  onExpandCase
}: CaseCardProps) {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ —Ö—É–∫–∏ –¥–æ –∫–∞–∫–∏—Ö-–ª–∏–±–æ —É—Å–ª–æ–≤–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
  const [isExpanded, setIsExpanded] = useState(false);
  const [isClient, setIsClient] = useState(false);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–Ω–æ –ª–∏ –¥–µ–ª–æ
  const isLocked = userExp < requiredExp;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
  useEffect(() => {
    setIsClient(true);
  }, []);

  const handleOpenCase = (e: React.MouseEvent) => {
    e.preventDefault();
    
    // –ï—Å–ª–∏ –¥–µ–ª–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ, –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ
    if (isLocked) {
      return;
    }
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏
    if (onExpandCase) {
      onExpandCase(true, { number, title, description });
    } else {
      setIsExpanded(true);
    }
  };

  const handleCloseCase = () => {
    setIsExpanded(false);
    // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ –∑–∞–∫—Ä—ã—Ç–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏
    if (onExpandCase) {
      onExpandCase(false, { number, title, description });
    }
  };

  // –ï—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞ –∏ –º—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–µ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ, 
  // –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –µ–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –∫–∞—Ä—Ç–æ—á–∫–∏
  if (isExpanded && onExpandCase) {
    // –í–º–µ—Å—Ç–æ —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å—Ä–∞–∑—É —Å–∫—Ä—ã–≤–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É, –º—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –µ—ë —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å
    // –Ω–æ —Å –º–µ–Ω—å—à–µ–π –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é, —á—Ç–æ–±—ã –æ–Ω–∞ –ø–ª–∞–≤–Ω–æ –∏—Å—á–µ–∑–∞–ª–∞
    return (
      <div className={`relative border border-black p-4 h-auto bg-transparent ${className}`}
           style={{ opacity: 0, transition: 'opacity 0.3s ease-out', minHeight: '230px' }}>
        {/* –ö–æ–ø–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
        {isMarked && (
          <div className="absolute inset-0 flex items-center justify-center pointer-events-none">
            <Image src="/images/close.png" alt="–ó–∞—á–µ—Ä–∫–Ω—É—Ç–æ" width={200} height={200} style={{ objectFit: 'contain', width: '70%', height: 'auto' }} />
          </div>
        )}

        <div className="relative z-10">
          <div className="mb-2 border-b border-black pb-1">
            <h3 className="font-bold" style={{ fontFamily: "var(--font-rationalist-bold)" }}>–î–µ–ª–æ ‚Ññ{number}: {title}</h3>
          </div>

          <p className="text-sm mb-4 text-justify" style={{ fontFamily: "var(--font-rationalist-light)" }}>{description}</p>

          <div className="text-right">
            <span 
              className="inline-block relative font-bold"
              style={{ fontFamily: "var(--font-rationalist-demibold)" }}
            >
              <span>–†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–ª–æ ‚Üí</span>
            </span>
          </div>
        </div>
      </div>
    );
  }

  // –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏–ª–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –≤—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—á–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É –±–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  if (!isClient) {
    return (
      <div 
        className={`relative border border-black p-4 h-auto bg-transparent ${className}`}
        style={{ 
          minHeight: '230px', 
          opacity: isLocked ? 0.4 : isMarked ? 0.6 : 1,
          filter: isLocked ? 'grayscale(100%)' : 'none'
        }}
      >
        {isMarked && (
          <div className="absolute inset-0 flex items-center justify-center pointer-events-none">
            <Image src="/images/close.png" alt="–ó–∞—á–µ—Ä–∫–Ω—É—Ç–æ" width={200} height={200} style={{ objectFit: 'contain', width: '70%', height: 'auto' }} />
          </div>
        )}

        <div className="relative z-10">
          <div className="mb-2 border-b border-black pb-1">
            <h3 className="font-bold" style={{ fontFamily: "var(--font-rationalist-bold)" }}>–î–µ–ª–æ ‚Ññ{number}: {title}</h3>
          </div>

          {isLocked ? (
            <div className="text-center py-4">
              <p className="text-sm mb-2" style={{ fontFamily: "var(--font-rationalist-light)" }}>
                –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø—ã—Ç–∞: {requiredExp}
              </p>
              <p className="text-sm" style={{ fontFamily: "var(--font-rationalist-light)" }}>
                üîí –î–µ–ª–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ
              </p>
            </div>
          ) : (
            <>
              <p className="text-sm mb-4 text-justify" style={{ fontFamily: "var(--font-rationalist-light)" }}>{description}</p>
              <div className="text-right">
                <span 
                  className="inline-block relative font-bold group"
                  style={{ fontFamily: "var(--font-rationalist-demibold)" }}
                >
                  <span>–†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–ª–æ ‚Üí</span>
                </span>
              </div>
            </>
          )}
        </div>
      </div>
    );
  }

  return (
    <>
      <div 
        className={`relative border border-black p-4 h-auto bg-transparent ${isLocked ? 'group' : ''} ${className}`}
        style={{
          transition: 'opacity 0.3s ease-in-out, filter 0.3s ease-in-out',
          opacity: isExpanded && onExpandCase ? 0 : isLocked ? 0.4 : isMarked ? 0.6 : 1,
          minHeight: '230px',
          filter: isLocked ? 'grayscale(100%)' : 'none',
          cursor: isLocked ? 'not-allowed' : 'default'
        }}
      >
        {isMarked && (
          <div className="absolute inset-0 flex items-center justify-center pointer-events-none">
            <Image src="/images/close.png" alt="–ó–∞—á–µ—Ä–∫–Ω—É—Ç–æ" width={200} height={200} style={{ objectFit: 'contain', width: '70%', height: 'auto' }} />
          </div>
        )}

        {isLocked && (
          <div 
            className="absolute inset-0 flex items-center justify-center"
          >
            <div 
              className="bg-black text-white text-sm rounded px-4 py-2 opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap"
              style={{ fontFamily: "var(--font-rationalist-light)" }}
            >
              –¢—Ä–µ–±—É–µ—Ç—Å—è {requiredExp} –æ–ø—ã—Ç–∞
            </div>
          </div>
        )}

        <div className="relative z-10">
          <div className="mb-2 border-b border-black pb-1">
            <h3 className="font-bold" style={{ fontFamily: "var(--font-rationalist-bold)" }}>–î–µ–ª–æ ‚Ññ{number}: {title}</h3>
          </div>

          <p className="text-sm mb-4 text-justify" style={{ fontFamily: "var(--font-rationalist-light)" }}>{description}</p>

          <div className="text-right">
            {isLocked ? (
              <div className="relative">
                <span 
                  className="inline-block relative font-bold text-gray-500"
                  style={{ fontFamily: "var(--font-rationalist-demibold)" }}
                >
                  <span>–†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–ª–æ ‚Üí</span>
                </span>
              </div>
            ) : (
              <Link 
                href="#" 
                onClick={handleOpenCase}
                className="inline-block relative font-bold"
                style={{ fontFamily: "var(--font-rationalist-demibold)" }}
              >
                <span className="view-case-link inline-block cursor-pointer hover:opacity-80">
                  –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–ª–æ ‚Üí
                  <span 
                    className="absolute left-0 bottom-0 w-0 h-[1px] bg-black view-case-link-hover" 
                    style={{ transition: "width 0.3s ease-in-out" }}
                  ></span>
                </span>
              </Link>
            )}
          </div>
        </div>

        {isLocked && (
          <div className="absolute inset-0 bg-transparent" />
        )}
      </div>

      {/* –†–∞–∑–≤–µ—Ä–Ω—É—Ç–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç onExpandCase) */}
      {isExpanded && !onExpandCase && !isLocked && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 p-5" 
            style={{ animation: "fadeIn 0.3s ease-out" }}>
          <ExpandedCaseContent 
            number={number} 
            title={title} 
            description={description} 
            onClose={handleCloseCase} 
          />
        </div>
      )}
    </>
  );
});

// –í—ã–¥–µ–ª–∏–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
export const ExpandedCaseContent = memo(function ExpandedCaseContent({
  number,
  title,
  description,
  onClose,
  className = ""
}: {
  number: string;
  title: string;
  description: string;
  onClose: () => void;
  className?: string;
}) {
  const tabs = ["SQL-–∑–∞–ø—Ä–æ—Å—ã", "–°—Ö–µ–º–∞ –ë–î", "–ó–∞–º–µ—Ç–∫–∏", "–û—Ç–≤–µ—Ç—ã"];
  const [activeTab, setActiveTab] = useState(tabs[0]);
  const [isClosing, setIsClosing] = useState(false);
  const contentRef = useRef<HTMLDivElement>(null);
  const [isResultCollapsed, setIsResultCollapsed] = useState(false);
  const [sqlQuery, setSqlQuery] = useState("");
  const [queryResult, setQueryResult] = useState<string | null>(null);
  const [notes, setNotes] = useState("");
  const { user } = useAuth();

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–º–µ—Ç–∫–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏–ª–∏ —Å–º–µ–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    if (user) {
      const savedNotes = localStorage.getItem(`case_notes_${user.username}_${number}`);
      if (savedNotes) {
        setNotes(savedNotes);
      } else {
        setNotes(""); // –û—á–∏—â–∞–µ–º –∑–∞–º–µ—Ç–∫–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      }
    } else {
      setNotes(""); // –û—á–∏—â–∞–µ–º –∑–∞–º–µ—Ç–∫–∏, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    }
  }, [number, user]);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–º–µ—Ç–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  const handleNotesChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {
    const newNotes = e.target.value;
    setNotes(newNotes);
    if (user) {
      localStorage.setItem(`case_notes_${user.username}_${number}`, newNotes);
    }
  };

  const handleClose = () => {
    setIsClosing(true);
    // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
    setTimeout(() => {
      onClose();
    }, 500); // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ globals.css
  };

  const toggleResultPanel = () => {
    setIsResultCollapsed(!isResultCollapsed);
  };

  const handleQueryChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {
    setSqlQuery(e.target.value);
  };

  const executeQuery = () => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–∞
    // –ü–æ–∫–∞ —Å–¥–µ–ª–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
    if (sqlQuery.trim() === "") {
      setQueryResult("–ó–∞–ø—Ä–æ—Å –ø—É—Å—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ SQL-–∑–∞–ø—Ä–æ—Å.");
      return;
    }
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
    setQueryResult("–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...");
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
    setTimeout(() => {
      if (sqlQuery.toLowerCase().includes("select") && sqlQuery.toLowerCase().includes("from")) {
        setQueryResult(`–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞: 
| id | name | value |
|----|------|-------|
| 1  | John | 100   |
| 2  | Anna | 200   |
| 3  | Mike | 150   |`);
      } else {
        setQueryResult("–û—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å SQL.");
      }
    }, 500);
  };

  return (
    <div 
      ref={contentRef}
      className={`border-2 border-black p-6 w-full h-auto bg-transparent backdrop-blur-none ${className}`}
      style={{ 
        animation: isClosing ? "collapseCard 0.5s ease-out forwards" : "expandCard 0.5s ease-out",
        fontFamily: "var(--font-rationalist-light)",
      }}
    >
      {/* –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ –¥–µ–ª–∞–º" */}
      <button 
        onClick={handleClose}
        className="flex items-center mb-6 font-bold hover:underline"
        style={{ fontFamily: "var(--font-rationalist-demibold)" }}
      >
        ‚Üê –ù–∞–∑–∞–¥ –∫ –¥–µ–ª–∞–º
      </button>

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–ª–∞ */}
      <div className="mb-8 border-b-2 border-black pb-4">
        <div className="flex items-center mb-2">
          <h2 className="text-2xl font-bold mb-4" style={{ fontFamily: "var(--font-rationalist-bold)" }}>
            –î–µ–ª–æ ‚Ññ{number}: {title}
          </h2>
        </div>
        <p className="text-lg mb-6" style={{ fontFamily: "var(--font-rationalist-light)" }}>
          {description}
        </p>

        {/* –¶–µ–ª–∏/–ø–æ–¥—Å–∫–∞–∑–∫–∏ */}
        <div className="mt-6">
          <h4 className="text-xl font-bold mb-3" style={{ fontFamily: "var(--font-rationalist-bold)" }}>
            –¶–µ–ª–∏ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:
          </h4>
          <ul className="list-disc list-inside space-y-2">
            <li>–ù–∞–π—Ç–∏ –∫–ª—é—á–µ–≤—ã–µ —É–ª–∏–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö</li>
            <li>–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö</li>
            <li>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ—Ç–∏–≤ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è</li>
          </ul>
        </div>
      </div>

      {/* –í–∫–ª–∞–¥–∫–∏ */}
      <div className="mb-4">
        <div className="flex border-b border-black">
          {tabs.map(tab => (
            <button
              key={tab}
              onClick={() => setActiveTab(tab)}
              className={`py-2 px-4 font-bold ${activeTab === tab ? 'bg-black text-white' : 'hover:bg-gray-200'}`}
              style={{ fontFamily: "var(--font-rationalist-bold)" }}
            >
              {tab}
            </button>
          ))}
        </div>
      </div>

      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ */}
      <div className="h-[40vh] p-4 overflow-y-auto bg-transparent">
        {activeTab === "SQL-–∑–∞–ø—Ä–æ—Å—ã" && (
          <div className="flex h-full gap-4">
            {/* –ü–∞–Ω–µ–ª—å –¥–ª—è SQL-–∑–∞–ø—Ä–æ—Å–∞ (–ª–µ–≤–∞—è) */}
            <div className="flex flex-col w-1/2" style={{ 
              border: 'none'
            }}>
              {/* –®–∞–ø–∫–∞ –æ–∫–Ω–∞ SQL */}
              <div className="flex justify-between items-center pr-1" style={{ backgroundColor: 'rgba(255, 168, 16, 0.4)' }}>
                <div className="p-2 font-bold text-black" style={{ fontFamily: "var(--font-rationalist-light)" }}>
                  SQL –∑–∞–ø—Ä–æ—Å
                </div>
                <button 
                  className="px-2 py-0.5 m-1 mr-2 text-black flex items-center justify-center gap-1 text-sm"
                  style={{ backgroundColor: 'rgba(255, 168, 16, 0.6)', fontFamily: "var(--font-rationalist-light)" }}
                  onClick={executeQuery}
                >
                  <Play className="w-3 h-3 stroke-[2]" />
                  –í—ã–ø–æ–ª–Ω–∏—Ç—å
                </button>
              </div>
              {/* –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ SQL */}
              <textarea
                className="flex-1 p-4 resize-none border-0 outline-none sql-textarea text-sm"
                style={{ backgroundColor: '#241C13', color: '#FFFFFF', fontFamily: "var(--font-rationalist-light)" }}
                placeholder="SELECT * FROM bla_bla_table ..."
                spellCheck="false"
                value={sqlQuery}
                onChange={handleQueryChange}
              ></textarea>
            </div>

            {/* –ü–∞–Ω–µ–ª—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞ (–ø—Ä–∞–≤–∞—è) */}
            <div className="flex flex-col w-1/2">
              {/* –®–∞–ø–∫–∞ –æ–∫–Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ */}
              <div 
                className="flex justify-between items-center cursor-pointer" 
                style={{ backgroundColor: 'rgba(255, 168, 16, 0.4)' }}
                onClick={toggleResultPanel}
              >
                <div className="p-2 font-bold text-black" style={{ fontFamily: "var(--font-rationalist-light)" }}>
                  –†–µ–∑—É–ª—å—Ç–∞—Ç
                </div>
                <button className="px-3 py-1 m-1 text-black" style={{ background: 'none', fontFamily: "var(--font-rationalist-light)" }} onClick={toggleResultPanel}>
                  {isResultCollapsed ? <ChevronDown className="w-4 h-4 stroke-[2]" /> : <ChevronUp className="w-4 h-4 stroke-[2]" />}
                </button>
              </div>
              
              {/* –û–±–ª–∞—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ */}
              <div 
                className="flex-1 overflow-auto transition-all duration-300"
                style={{ 
                  maxHeight: isResultCollapsed ? '0' : '100%',
                  opacity: isResultCollapsed ? 0 : 1,
                  visibility: isResultCollapsed ? 'hidden' : 'visible',
                  backgroundColor: '#241C13'
                }}
              >
                <div className="p-4 h-full">
                  {queryResult ? (
                    <pre className="whitespace-pre-wrap text-sm text-white" style={{ fontFamily: "var(--font-rationalist-light)" }}>{queryResult}</pre>
                  ) : (
                    <div className="text-gray-400 italic" style={{ fontFamily: "var(--font-rationalist-light)" }}>–°—Ç—Ä–æ–∫ –Ω–µ—Ç. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.</div>
                  )}
                </div>
              </div>
            </div>
          </div>
        )}
        {activeTab === "–°—Ö–µ–º–∞ –ë–î" && (
          <div className="text-center p-10">
            <p>–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Å—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</p>
          </div>
        )}
        {activeTab === "–ó–∞–º–µ—Ç–∫–∏" && (
          <div>
            <textarea
              className="w-full h-full p-4 border border-gray-300"
              placeholder="–í–∞—à–∏ –∑–∞–º–µ—Ç–∫–∏ –ø–æ –¥–µ–ª—É..."
              style={{ fontFamily: "var(--font-rationalist-light)" }}
              value={notes}
              onChange={handleNotesChange}
            ></textarea>
          </div>
        )}
        {activeTab === "–û—Ç–≤–µ—Ç—ã" && (
          <div className="p-4">
            <div className="mb-4">
              <label className="block mb-2 font-bold" style={{ fontFamily: "var(--font-rationalist-bold)" }}>
                –í–∞—à –æ—Ç–≤–µ—Ç:
              </label>
              <input
                type="text"
                className="w-full p-2 border border-gray-300"
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç..."
                style={{ fontFamily: "var(--font-rationalist-light)" }}
              />
            </div>
            <button className="px-4 py-2 bg-black text-white">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
          </div>
        )}
      </div>
    </div>
  );
}); 
--
-- PostgreSQL database dump
--

-- Dumped from database version 14.18 (Homebrew)
-- Dumped by pg_dump version 14.18 (Homebrew)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: trg_create_userprogress_for_all_users(); Type: FUNCTION; Schema: public; Owner: sqlhunt
--

CREATE FUNCTION public.trg_create_userprogress_for_all_users() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO users_userprogress (user_id, case_id, status, created, updated)
    SELECT u.id, NEW.id, 'не начато', now(), now()
    FROM users_user u
    WHERE NOT EXISTS (
        SELECT 1 FROM users_userprogress up WHERE up.user_id = u.id AND up.case_id = NEW.id
    );
    RETURN NEW;
END;
$$;


ALTER FUNCTION public.trg_create_userprogress_for_all_users() OWNER TO sqlhunt;

--
-- Name: trg_create_userprogress_for_new_user(); Type: FUNCTION; Schema: public; Owner: sqlhunt
--

CREATE FUNCTION public.trg_create_userprogress_for_new_user() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO users_userprogress (user_id, case_id, status, created, updated)
    SELECT NEW.id, c.id, 'не начато', now(), now()
    FROM users_case c
    WHERE NOT EXISTS (
        SELECT 1 FROM users_userprogress up WHERE up.user_id = NEW.id AND up.case_id = c.id
    );
    RETURN NEW;
END;
$$;


ALTER FUNCTION public.trg_create_userprogress_for_new_user() OWNER TO sqlhunt;

--
-- Name: trg_deduct_xp_on_case_deletion(); Type: FUNCTION; Schema: public; Owner: sqlhunt
--

CREATE FUNCTION public.trg_deduct_xp_on_case_deletion() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    rec RECORD;
BEGIN
    FOR rec IN SELECT user_id FROM users_userprogress WHERE case_id = OLD.id AND status = 'завершено'
    LOOP
        UPDATE users_user
        SET xp = GREATEST(xp - OLD.reward_xp, 0)
        WHERE id = rec.user_id;
    END LOOP;
    RETURN OLD;
END;
$$;


ALTER FUNCTION public.trg_deduct_xp_on_case_deletion() OWNER TO sqlhunt;

--
-- Name: trg_grant_xp_on_status_completed(); Type: FUNCTION; Schema: public; Owner: sqlhunt
--

CREATE FUNCTION public.trg_grant_xp_on_status_completed() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF OLD.status <> 'завершено' AND NEW.status = 'завершено' THEN
        UPDATE users_user
        SET xp = xp + (SELECT reward_xp FROM users_case WHERE id = NEW.case_id)
        WHERE id = NEW.user_id;
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION public.trg_grant_xp_on_status_completed() OWNER TO sqlhunt;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: users_availabletable; Type: TABLE; Schema: public; Owner: sqlhunt
--

CREATE TABLE public.users_availabletable (
    id bigint NOT NULL,
    "table" character varying(50) NOT NULL,
    case_id bigint NOT NULL
);


ALTER TABLE public.users_availabletable OWNER TO sqlhunt;

--
-- Name: users_availabletable_id_seq; Type: SEQUENCE; Schema: public; Owner: sqlhunt
--

ALTER TABLE public.users_availabletable ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_availabletable_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users_case; Type: TABLE; Schema: public; Owner: sqlhunt
--

CREATE TABLE public.users_case (
    id bigint NOT NULL,
    title character varying(100) NOT NULL,
    description text NOT NULL,
    required_xp integer NOT NULL,
    reward_xp integer NOT NULL,
    answer character varying(50) NOT NULL,
    short_description character varying(255) NOT NULL
);


ALTER TABLE public.users_case OWNER TO sqlhunt;

--
-- Name: users_case_id_seq; Type: SEQUENCE; Schema: public; Owner: sqlhunt
--

ALTER TABLE public.users_case ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_case_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users_user; Type: TABLE; Schema: public; Owner: sqlhunt
--

CREATE TABLE public.users_user (
    created timestamp with time zone NOT NULL,
    updated timestamp with time zone NOT NULL,
    id integer NOT NULL,
    xp integer NOT NULL
);


ALTER TABLE public.users_user OWNER TO sqlhunt;

--
-- Name: users_user_id_seq; Type: SEQUENCE; Schema: public; Owner: sqlhunt
--

ALTER TABLE public.users_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users_userprogress; Type: TABLE; Schema: public; Owner: sqlhunt
--

CREATE TABLE public.users_userprogress (
    id bigint NOT NULL,
    created timestamp with time zone NOT NULL,
    updated timestamp with time zone NOT NULL,
    status character varying(20) NOT NULL,
    case_id bigint NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.users_userprogress OWNER TO sqlhunt;

--
-- Name: users_userprogress_id_seq; Type: SEQUENCE; Schema: public; Owner: sqlhunt
--

ALTER TABLE public.users_userprogress ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_userprogress_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users_availabletable users_availabletable_case_id_table_76b1b326_uniq; Type: CONSTRAINT; Schema: public; Owner: sqlhunt
--

ALTER TABLE ONLY public.users_availabletable
    ADD CONSTRAINT users_availabletable_case_id_table_76b1b326_uniq UNIQUE (case_id, "table");


--
-- Name: users_availabletable users_availabletable_pkey; Type: CONSTRAINT; Schema: public; Owner: sqlhunt
--

ALTER TABLE ONLY public.users_availabletable
    ADD CONSTRAINT users_availabletable_pkey PRIMARY KEY (id);


--
-- Name: users_case users_case_pkey; Type: CONSTRAINT; Schema: public; Owner: sqlhunt
--

ALTER TABLE ONLY public.users_case
    ADD CONSTRAINT users_case_pkey PRIMARY KEY (id);


--
-- Name: users_user users_user_pkey; Type: CONSTRAINT; Schema: public; Owner: sqlhunt
--

ALTER TABLE ONLY public.users_user
    ADD CONSTRAINT users_user_pkey PRIMARY KEY (id);


--
-- Name: users_userprogress users_userprogress_pkey; Type: CONSTRAINT; Schema: public; Owner: sqlhunt
--

ALTER TABLE ONLY public.users_userprogress
    ADD CONSTRAINT users_userprogress_pkey PRIMARY KEY (id);


--
-- Name: users_userprogress users_userprogress_user_id_case_id_80f2dc74_uniq; Type: CONSTRAINT; Schema: public; Owner: sqlhunt
--

ALTER TABLE ONLY public.users_userprogress
    ADD CONSTRAINT users_userprogress_user_id_case_id_80f2dc74_uniq UNIQUE (user_id, case_id);


--
-- Name: users_avail_case_id_a4a855_idx; Type: INDEX; Schema: public; Owner: sqlhunt
--

CREATE INDEX users_avail_case_id_a4a855_idx ON public.users_availabletable USING btree (case_id);


--
-- Name: users_availabletable_case_id_6462ed8b; Type: INDEX; Schema: public; Owner: sqlhunt
--

CREATE INDEX users_availabletable_case_id_6462ed8b ON public.users_availabletable USING btree (case_id);


--
-- Name: users_case_title_a2745c_idx; Type: INDEX; Schema: public; Owner: sqlhunt
--

CREATE INDEX users_case_title_a2745c_idx ON public.users_case USING btree (title);


--
-- Name: users_userp_case_id_a9c848_idx; Type: INDEX; Schema: public; Owner: sqlhunt
--

CREATE INDEX users_userp_case_id_a9c848_idx ON public.users_userprogress USING btree (case_id, status);


--
-- Name: users_userp_case_id_c0a4ae_idx; Type: INDEX; Schema: public; Owner: sqlhunt
--

CREATE INDEX users_userp_case_id_c0a4ae_idx ON public.users_userprogress USING btree (case_id, user_id);


--
-- Name: users_userp_user_id_156ffc_idx; Type: INDEX; Schema: public; Owner: sqlhunt
--

CREATE INDEX users_userp_user_id_156ffc_idx ON public.users_userprogress USING btree (user_id);


--
-- Name: users_userprogress_case_id_3dc7b7a4; Type: INDEX; Schema: public; Owner: sqlhunt
--

CREATE INDEX users_userprogress_case_id_3dc7b7a4 ON public.users_userprogress USING btree (case_id);


--
-- Name: users_userprogress_user_id_3af9d33f; Type: INDEX; Schema: public; Owner: sqlhunt
--

CREATE INDEX users_userprogress_user_id_3af9d33f ON public.users_userprogress USING btree (user_id);


--
-- Name: users_case trg_after_insert_case; Type: TRIGGER; Schema: public; Owner: sqlhunt
--

CREATE TRIGGER trg_after_insert_case AFTER INSERT ON public.users_case FOR EACH ROW EXECUTE FUNCTION public.trg_create_userprogress_for_all_users();


--
-- Name: users_user trg_after_insert_user; Type: TRIGGER; Schema: public; Owner: sqlhunt
--

CREATE TRIGGER trg_after_insert_user AFTER INSERT ON public.users_user FOR EACH ROW EXECUTE FUNCTION public.trg_create_userprogress_for_new_user();


--
-- Name: users_userprogress trg_after_update_userprogress; Type: TRIGGER; Schema: public; Owner: sqlhunt
--

CREATE TRIGGER trg_after_update_userprogress AFTER UPDATE OF status ON public.users_userprogress FOR EACH ROW EXECUTE FUNCTION public.trg_grant_xp_on_status_completed();


--
-- Name: users_case trg_before_delete_case; Type: TRIGGER; Schema: public; Owner: sqlhunt
--

CREATE TRIGGER trg_before_delete_case BEFORE DELETE ON public.users_case FOR EACH ROW EXECUTE FUNCTION public.trg_deduct_xp_on_case_deletion();


--
-- Name: users_availabletable users_availabletable_case_id_6462ed8b_fk_users_case_id; Type: FK CONSTRAINT; Schema: public; Owner: sqlhunt
--

ALTER TABLE ONLY public.users_availabletable
    ADD CONSTRAINT users_availabletable_case_id_6462ed8b_fk_users_case_id FOREIGN KEY (case_id) REFERENCES public.users_case(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_userprogress users_userprogress_case_id_3dc7b7a4_fk_users_case_id; Type: FK CONSTRAINT; Schema: public; Owner: sqlhunt
--

ALTER TABLE ONLY public.users_userprogress
    ADD CONSTRAINT users_userprogress_case_id_3dc7b7a4_fk_users_case_id FOREIGN KEY (case_id) REFERENCES public.users_case(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_userprogress users_userprogress_user_id_3af9d33f_fk_users_user_id; Type: FK CONSTRAINT; Schema: public; Owner: sqlhunt
--

ALTER TABLE ONLY public.users_userprogress
    ADD CONSTRAINT users_userprogress_user_id_3af9d33f_fk_users_user_id FOREIGN KEY (user_id) REFERENCES public.users_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

